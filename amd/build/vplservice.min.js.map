{"version":3,"file":"vplservice.min.js","sources":["../src/vplservice.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides utility method to communicate with a VPL (this is an API wrapper to use VPLUtil)\n * @copyright  Astor Bizard, 2019\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// VPLUtil has to be loaded to use this module.\n/* globals VPLUtil */\ndefine(['jquery', 'core/url'], function($, url) {\n\n    /**\n     * Build ajax url to call with VPLUtil.\n     * @param {String|Number} questionId QUESTION ID.\n     * @param {String|Number} userId User ID.\n     * @param {String} file (optional) Ajax file to use. Defaults to edit.\n     * @return {String} The ajax url built.\n     */\n    function getAjaxUrl(questionId, userId, file) {\n        if (file === undefined) {\n            file = 'edit';\n        }\n        return url.relativeUrl('/question/type/savpl/ajax') + '/' + file + '.json.php?id=' + questionId + '&userId=' + userId + '&action=';\n    }\n\n    var VPLService = {};\n\n    // Cache for info.\n    var cache = {\n        reqfile: [],\n        execfiles: []\n    };\n\n    // Retrieve specified files from the VPL (either 'reqfile' or 'execfile').\n    // Note : these files are stored in cache. To clear it, the user has to reload the page.\n    VPLService.info = function(filesType, questionId) {\n        if (cache[filesType][questionId] != undefined) {\n            return $.Deferred().resolve(cache[filesType][questionId]).promise();\n        } else {\n            var deferred = filesType == 'reqfile' ?\n                VPLUtil.requestAction('resetfiles', '', {}, getAjaxUrl(questionId, '')) :\n                VPLUtil.requestAction('load', '', {}, getAjaxUrl(questionId, '', 'executionfiles'));\n            return deferred\n            .then(function(response) {\n                var files = filesType == 'reqfile' ?\n                    response.files[0] :\n                    response.files;\n                cache[filesType][questionId] = files;\n                return files;\n            }).promise();\n        }\n    };\n\n    // Save student answer to VPL, by replacing {{ANSWER}} in the template by the student answer.\n    VPLService.save = function(questionId, answer, filestype) {\n        return $.ajax(url.relativeUrl('/question/type/savpl/ajax/save.json.php'), {\n            data: {\n                qid: questionId,\n                answer: answer,\n                filestype: filestype\n            },\n            method: 'POST'\n        }).promise();\n    };\n\n    // Execute the specified action (should be 'run' or 'evaluate').\n    // Note that this function does not call save, it has to be called beforehand if needed.\n    // Note also that callback may be called several times\n    // (especially one time with (false) execution error and one time right after with execution result).\n    VPLService.exec = function(action, questionId, userId, terminal, callback) {\n        // Build the options object for VPLUtil.\n        var options = {\n            ajaxurl: getAjaxUrl(questionId, userId),\n            resultSet: false,\n            setResult: function(result) {\n                this.resultSet = true;\n                callback(result);\n            },\n            close: function() {\n                // If connection is closed without a result set, display an error.\n                // /!\\ It can happen that result will be set about 0.3s after closing.\n                // -> Set a timeout to avoid half-second display of error.\n                // Note : if delay between close and result is greater than timeout, it is fine\n                // (there will just be a 0.1s error display before displaying the result).\n                var _this = this;\n                setTimeout(function() {\n                    if (!_this.resultSet) {\n                        callback({execerror: M.util.get_string('execerrordetails', 'qtype_savpl')});\n                    }\n                }, 600);\n            },\n\n            // The following will only be used for the 'run' action.\n            getConsole: function() {\n                return terminal;\n            },\n            run: function(type, conInfo, ws) {\n                var _this = this;\n                terminal.connect(conInfo.executionURL, function() {\n                    ws.close();\n                    if (!_this.resultSet) {\n                        // This may happen for the run action.\n                        callback({});\n                    }\n                });\n            }\n        };\n\n        return VPLUtil.requestAction(action, '', {}, options.ajaxurl)\n        .done(function(response) {\n            VPLUtil.webSocketMonitor(response, '', '', options);\n        }).promise();\n    };\n\n    return {\n        call: function(service, ...args) {\n            // Deactivate VPLUtil progress bar, as we have our own progress indicator.\n            VPLUtil.progressBar = function() {\n                this.setLabel = function() {\n                    return;\n                };\n                this.close = function() {\n                    return;\n                };\n                this.isClosed = function() {\n                    return true;\n                };\n            };\n            // Call service.\n            return VPLService[service](...args);\n        },\n\n        langOfFile: function(fileName) {\n            return VPLUtil.langType(fileName.split('.').pop());\n        },\n\n        isBinary: function(fileName) {\n            return VPLUtil.isBinary(fileName);\n        }\n    };\n});\n"],"names":["define","$","url","getAjaxUrl","questionId","userId","file","undefined","relativeUrl","VPLService","cache","reqfile","execfiles","info","filesType","Deferred","resolve","promise","VPLUtil","requestAction","then","response","files","save","answer","filestype","ajax","data","qid","method","exec","action","terminal","callback","options","ajaxurl","resultSet","setResult","result","close","_this","this","setTimeout","execerror","M","util","get_string","getConsole","run","type","conInfo","ws","connect","executionURL","done","webSocketMonitor","call","service","progressBar","setLabel","isClosed","args","langOfFile","fileName","langType","split","pop","isBinary"],"mappings":";;;;;AAuBAA,gCAAO,CAAC,SAAU,aAAa,SAASC,EAAGC,cAS9BC,WAAWC,WAAYC,OAAQC,kBACvBC,IAATD,OACAA,KAAO,QAEJJ,IAAIM,YAAY,6BAA+B,IAAMF,KAAO,gBAAkBF,WAAa,WAAaC,OAAS,eAGxHI,WAAa,GAGbC,MAAQ,CACRC,QAAS,GACTC,UAAW,WAKfH,WAAWI,KAAO,SAASC,UAAWV,mBACEG,MAAhCG,MAAMI,WAAWV,YACVH,EAAEc,WAAWC,QAAQN,MAAMI,WAAWV,aAAaa,WAE9B,WAAbH,UACXI,QAAQC,cAAc,aAAc,GAAI,GAAIhB,WAAWC,WAAY,KACnEc,QAAQC,cAAc,OAAQ,GAAI,GAAIhB,WAAWC,WAAY,GAAI,oBAEpEgB,MAAK,SAASC,cACPC,MAAqB,WAAbR,UACRO,SAASC,MAAM,GACfD,SAASC,aACbZ,MAAMI,WAAWV,YAAckB,MACxBA,SACRL,WAKXR,WAAWc,KAAO,SAASnB,WAAYoB,OAAQC,kBACpCxB,EAAEyB,KAAKxB,IAAIM,YAAY,2CAA4C,CACtEmB,KAAM,CACFC,IAAKxB,WACLoB,OAAQA,OACRC,UAAWA,WAEfI,OAAQ,SACTZ,WAOPR,WAAWqB,KAAO,SAASC,OAAQ3B,WAAYC,OAAQ2B,SAAUC,cAEzDC,QAAU,CACVC,QAAShC,WAAWC,WAAYC,QAChC+B,WAAW,EACXC,UAAW,SAASC,aACXF,WAAY,EACjBH,SAASK,SAEbC,MAAO,eAMCC,MAAQC,KACZC,YAAW,WACFF,MAAMJ,WACPH,SAAS,CAACU,UAAWC,EAAEC,KAAKC,WAAW,mBAAoB,mBAEhE,MAIPC,WAAY,kBACDf,UAEXgB,IAAK,SAASC,KAAMC,QAASC,QACrBX,MAAQC,KACZT,SAASoB,QAAQF,QAAQG,cAAc,WACnCF,GAAGZ,QACEC,MAAMJ,WAEPH,SAAS,gBAMlBf,QAAQC,cAAcY,OAAQ,GAAI,GAAIG,QAAQC,SACpDmB,MAAK,SAASjC,UACXH,QAAQqC,iBAAiBlC,SAAU,GAAI,GAAIa,YAC5CjB,WAGA,CACHuC,KAAM,SAASC,SAEXvC,QAAQwC,YAAc,gBACbC,SAAW,kBAGXpB,MAAQ,kBAGRqB,SAAW,kBACL,kCAVQC,wDAAAA,oCAchBpD,WAAWgD,YAAYI,OAGlCC,WAAY,SAASC,iBACV7C,QAAQ8C,SAASD,SAASE,MAAM,KAAKC,QAGhDC,SAAU,SAASJ,iBACR7C,QAAQiD,SAASJ"}